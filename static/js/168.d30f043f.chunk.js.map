{"version":3,"file":"static/js/168.d30f043f.chunk.js","mappings":"sPACA,EAAuB,sBAAvB,EAAsD,wBAAtD,EAAuF,wB,SCqDvF,EAhDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAbDC,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAY,mCAAG,8GAEYC,EAAAA,EAAAA,IAAuBT,GAFnC,OAEXU,EAFW,OAGjBN,EAAWM,EAAeC,SAHT,gDAKnBC,QAAQP,MAAM,2DAAd,MACAC,EAAS,KAAMO,SANI,yDAAH,qDASlBL,GACD,GAAE,CAACR,KAGF,2BAEGG,EAAQW,OAAS,GACf,eAAIC,UAAWC,EAAf,SACAb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,gBAAaL,UAAWC,EAAxB,WACC,gBAAID,UAAWC,EAAf,qBAAoCG,EAApC,QACE,uBAAIC,MAFEF,EAKZ,OAGD,+DAGDb,IACG,4FAOT,C,sBCpDD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzB,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__DJKij\",\"author\":\"Reviews_author__CqYAZ\",\"review\":\"Reviews_review__sHbuN\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetailsReviews } from '../App';\n \nimport css from './Reviews.module.css';\n\nconst Reviews = () => {  \n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n\n useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const fetchedReviews = await getMovieDetailsReviews(movieId);\n        setReviews(fetchedReviews.results); \n      } catch (error) {\n      console.error('Something went wrong with fetching reviews on movie page', error);\n      setError(error.message);\n    }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n     \n      {reviews.length > 0 ? (\n         <ul className={css.review}>\n        {reviews.map(({ id, author, content }) => {    \n          return (\n            <li key={id} className={css.item}>\n             <h3 className={css.author}>Author: {author} </h3>\n               <p>{content}</p>              \n          </li>\n          );\n        })}\n      </ul>\n      ) : (\n        <p>There are no reviews for this movie</p>\n      )}\n\n      {error && ( \n          <h2>\n            The service is currently unavailable. Please try again later.\n          </h2>\n    \n      )}\n    </div>\n  );  \n};\n\nexport default Reviews;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","getMovieDetailsReviews","fetchedReviews","results","console","message","length","className","css","map","id","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}