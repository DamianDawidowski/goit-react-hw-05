{"version":3,"file":"static/js/888.ffa9643c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","functions/functions.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"backButton\":\"MovieDetails_backButton__ilGfB\",\"title\":\"MovieDetails_title__RBndM\"};","import { useState, useEffect } from \"react\";\nimport { useParams, NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { getMovieDetails } from '../../functions/functions';\nimport css from './MovieDetails.module.css';\n \n \n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  let activeClassName = {\n    color: '#1383df',\n  };\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(error => {\n        setError('An error occured...');\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n     <div className={css.container}>\n        <button onClick={handleClick} className={css.backButton}>\n          Go back\n        </button>\n\n        {movie && <h1 className={css.title}>{movie.title}</h1> }\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h4>{movie.title}</h4>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div className=\"movie_overview\">\n              <h4>Overview</h4>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>          \n          <NavLink\n            to={`/movies/${movieId}/reviews`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <button className={css.backButton}>Reviews</button>\n          </NavLink>\n\n          <NavLink\n            to={`/movies/${movieId}/cast`}\n            style={({ isActive }) => (isActive ? activeClassName : undefined)}\n            state={location.state}\n          >\n            <button className={css.backButton}>Cast</button>\n          </NavLink>\n          <hr />\n          <Outlet />\n        </div>\n        </div>\n    </>\n  );\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ac3e035161883f7175e5be9954a0068d';\n  \n  export const  getTrendingMovies = async () => {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\n    );\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  };\n\n \nexport const getSearchMovies = async (searchQuery) =>  {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n    const foundMovies = response.data.results \n    return foundMovies;\n};\n\nexport const getMovieDetails = async (movieId) =>  {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    const foundDetails = response.data \n    return foundDetails;\n\n};\n\nexport const getMovieDetailsCast = async (movieId) =>  {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n    const cast = response.data.cast;\n    return cast;\n}\n \nexport const getMovieDetailsReviews = async (movieId) =>  {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    const reviews = response.data \n    return reviews;\n  };"],"names":["useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","activeClassName","color","useEffect","getMovieDetails","then","res","catch","finally","className","css","onClick","state","from","title","src","poster_path","alt","Date","release_date","getFullYear","popularity","overview","to","style","isActive","undefined","BASE_URL","API_KEY","getTrendingMovies","axios","response","trendingMovies","data","results","getSearchMovies","searchQuery","foundMovies","foundDetails","getMovieDetailsCast","cast","getMovieDetailsReviews","reviews"],"sourceRoot":""}