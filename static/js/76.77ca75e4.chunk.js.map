{"version":3,"file":"static/js/76.77ca75e4.chunk.js","mappings":"yNACA,GAAgB,SAAW,uBAAuB,QAAU,sBAAsB,QAAU,uB,oCCuE5F,EAjEa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIG,EAAAA,EAAAA,IAAoBX,GAHxB,OAGRY,EAHQ,OAIdR,EAAQQ,GAJM,gDAMdN,EAAS,KAAMO,SAND,yBASdL,GAAW,GATG,4EAAH,qDAYfE,GACD,GAAE,CAACV,KAEF,2BACGO,GAAW,aAEXJ,EAAKW,OAAS,GACb,eAAIC,UAAWC,EAAAA,SAAf,SACGb,EAAKc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5BC,EAAU,yCAAqCD,GAMnD,OAJKA,IACLC,EAAa,qMAIX,gBAAaP,UAAWC,EAAAA,SAAxB,WACE,gBACEO,IAAKD,EACLE,IAAKL,EACLJ,UAAWC,EAAAA,WAEb,4BACE,kCAAUG,MACV,uCAAeC,UARVF,EAYZ,OAGH,iEAGDb,IAEG,eAAIU,UAAWC,EAAAA,QAAf,yEAOT,C,sBCvED,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO7B,GAEP,YADAuB,EAAOvB,EAET,CAEI4B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castImg\":\"Cast_castImg__T4WbF\",\"message\":\"Cast_message__X53aY\"};","import css from './Cast.module.css';\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieDetailsCast } from '../App';\n \n\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const res = await getMovieDetailsCast(movieId);\n        setCast(res);\n      } catch (error) {\n        setError(error.message);\n      }\n      finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return (\n    <div>\n      {loading && 'Loading...'}\n\n      {cast.length > 0 ? (\n        <ul className={css.castList}>\n          {cast.map(({ id, name, character, profile_path }) => {\n            let profileImg = `https://image.tmdb.org/t/p/w500${profile_path}`;\n\n            if (!profile_path) {\n            profileImg = 'https://img.freepik.com/free-vector/coming-soon-black-backgroun-design_1017-37033.jpg?w=740&t=st=1687590032~exp=1687590632~hmac=f4299307fcc1f5dd11708d084dac40313c51828f25b3967ba47a65431cdcf25e';\n            \n            };\n            return (\n              <li key={id} className={css.castItem}>\n                <img\n                  src={profileImg}\n                  alt={name}\n                  className={css.castImg}\n                />\n                <div>\n                  <p>Name: {name}</p>\n                  <p>Character: {character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>There is no information about actors.</p>\n      )}\n\n      {error && (\n         \n          <h2 className={css.message}>\n            The service is temporarily unavailable, please try again.\n          </h2>\n        \n      )}\n    </div>\n  );\n};\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","getMovieDetailsCast","res","message","length","className","css","map","id","name","character","profile_path","profileImg","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}