{"version":3,"file":"static/js/681.59169852.chunk.js","mappings":"gMACA,GAAiB,E,kBCgDjB,EA7CkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,+BACE,kBAAMC,SAZW,SAAAC,GACnBA,EAAIC,iBACuB,KAAvBJ,EAAYK,QACdC,MAAM,kCAGRR,EAASE,GACTC,EAAe,GAChB,EAIiCM,UAAWC,EAAAA,WAAzC,WACE,kBACEC,KAAK,OACLC,KAAK,cACLC,MAAOX,EACPY,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZhB,SAxBkB,SAAAK,GACxBF,EAAeE,EAAIY,OAAOJ,MAAMK,cACjC,EAuBQT,UAAWC,EAAAA,eAEd,mBACEC,KAAK,SACLF,UAAWC,EAAAA,aAFb,wBASP,EC1CD,EAA4B,0BAA5B,EAA8D,sB,iBCqC9D,EA9Be,WAAO,IAAD,EACjB,GAAuCS,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KAEMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAA+B,IAE1CC,EAAAA,EAAAA,YAAU,WACFF,IACJG,EAAAA,EAAAA,IAAgBH,GAAOI,KAAKL,EAC/B,GAAE,CAACC,EAAOJ,IAQX,OACG,gBAAKX,UAAWC,EAAhB,UACE,2BACG,eAAID,UAAWC,EAAf,SAA2B,iBAD9B,KAEO,SAAC,EAAD,CAAWG,MAAOW,EAAOxB,SATX,SAACwB,GAE3BH,EAD6B,KAAVG,EAAe,CAAEA,MAAAA,GAAS,CAAC,EAE/C,IAOcF,EAAOO,KAAI,SAACC,GAAD,OAChB,yBAAmB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,OAASH,EAAMlB,QAAjEkB,EAAME,GADC,QAM3B,C","sources":["components/SearchBox/SearchBox.module.css","components/SearchBox/SearchBox.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import css from './SearchBox.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ onChange }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQuerySearch = evt => {\n    setSearchQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Please provide the movie title');\n    }\n\n    onChange(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.searchForm} >\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies ...\"\n          onChange={handleQuerySearch}\n           className={css.searchInput}\n        />\n        <button\n          type=\"submit\"\n          className={css.searchButton}\n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__sNK5N\",\"title\":\"Movies_title__EqSqF\"};","import SearchBox from \"../SearchBox/SearchBox\"\nimport css from './Movies.module.css';\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\nimport { getSearchMovies } from '../App';\nimport { Link } from \"react-router-dom\";\n\n\nconst Movies = () => {\n    const [searchParams,setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n\n    const query = searchParams.get(\"query\")?? \"\";\n\n    useEffect(() => {\n        if (query) {\n        getSearchMovies(query).then(setMovies)};\n    }, [query, searchParams]);\n\n\n    const updateQueryString = (query) => {\n    const nextParams = query !== \"\" ? { query} : {};\n    setSearchParams(nextParams);\n  };\n    \n    return (\n       <div className={css.container}>          \n         <ul>\n            <h1 className={css.title}>{'Movie Search'}</h1>; \n                <SearchBox value={query} onChange={updateQueryString} />\n                {movies.map((movie) => (\n            <li key={movie.id}><Link to={`/movies/${movie.id}`}>{movie.title || movie.name}</Link></li>\n        ))}\n         </ul>\n       </div>\n    );\n};\n\nexport default Movies;"],"names":["onChange","useState","searchQuery","setSearchQuery","onSubmit","evt","preventDefault","trim","alert","className","css","type","name","value","autoComplete","autoFocus","placeholder","target","toLowerCase","useSearchParams","searchParams","setSearchParams","movies","setMovies","query","get","useEffect","getSearchMovies","then","map","movie","to","id","title"],"sourceRoot":""}